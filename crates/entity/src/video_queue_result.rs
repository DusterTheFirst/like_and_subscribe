//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "video_queue_result")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub queue_id: i32,
    #[sea_orm(column_type = "Text")]
    pub action: String,
    pub shorts_redirect: bool,
    #[sea_orm(column_type = "Text")]
    pub visibility: String,
    pub duration: jiff_sea_orm_compat::JiffSignedDurationSeconds,
    pub timestamp: jiff_sea_orm_compat::JiffTimestampMilliseconds,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::video_queue::Entity",
        from = "Column::QueueId",
        to = "super::video_queue::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    VideoQueue,
}

impl Related<super::video_queue::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::VideoQueue.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
